import"./modulepreload-polyfill-B5Qt9EMX.js";document.addEventListener("DOMContentLoaded",()=>{let V={fisicos:[],virtuais:[]};const m=localStorage.getItem("token");if(!m){console.error("Token não encontrado no localStorage"),alert("Por favor, faça login novamente.");return}const y={"Content-Type":"application/json",Authorization:`Bearer ${m}`},B=document.getElementById("btnCriarFisico"),k=document.getElementById("btnCriarVirtual"),f=document.getElementById("btnPedirNovo"),T=document.getElementById("btnVerCartoes"),g=document.getElementById("secCriarFisico"),v=document.getElementById("secCriarVirtual"),b=document.getElementById("secPedirNovo"),C=document.getElementById("secVerCartoes"),h=document.getElementById("formCriarVirtual"),E=document.getElementById("formCriarFisico"),u=document.getElementById("formPedirNovo"),x=document.getElementById("cartaoVirtualContainer");f||console.error("Botão btnPedirNovo não encontrado no DOM"),u||console.error("Formulário formPedirNovo não encontrado no DOM"),document.getElementById("motivo")||console.error("Campo motivo não encontrado no DOM");function d(){g&&(g.style.display="none"),v&&(v.style.display="none"),b&&(b.style.display="none"),C&&(C.style.display="none")}function I(){const r=[];for(let e=0;e<4;e++)r.push(Math.floor(1e3+Math.random()*9e3));return r.join(" ")}function N(){return Math.floor(100+Math.random()*900).toString()}async function w(r){try{await navigator.clipboard.writeText(r),alert("Copiado para a área de transferência!")}catch{alert("Falha ao copiar. Tente manualmente.")}}B&&(B.onclick=()=>{console.log("Botão btnCriarFisico clicado"),d(),g.style.display="block"}),k&&(k.onclick=()=>{console.log("Botão btnCriarVirtual clicado"),d(),v.style.display="block"}),f&&(f.onclick=()=>{console.log("Botão btnPedirNovo clicado - Mostrando secPedirNovo"),d(),b.style.display="block"}),T&&(T.onclick=async()=>{console.log("Botão btnVerCartoes clicado"),d(),await p(),C.style.display="block"}),E&&E.addEventListener("submit",async r=>{r.preventDefault(),console.log("Formulário formCriarFisico enviado");const e=document.getElementById("nomeFisico")?.value.trim();if(!e){alert("Informe o nome do titular");return}try{console.log("Enviando para /api/cards/fisico:",{nomeTitular:e});const o=await fetch("/api/cards/fisico",{method:"POST",headers:y,body:JSON.stringify({nomeTitular:e})}),a=await o.json();if(console.log("Resposta do servidor:",a),!o.ok)throw console.error("Erro na requisição:",a),new Error(a.error||"Erro ao solicitar cartão físico");V.fisicos.push({nomeTitular:e,criadoEm:new Date().toLocaleDateString()}),alert("Cartão físico solicitado com sucesso para: "+e),E.reset(),await p()}catch(o){console.error("Erro em formCriarFisico:",o.message,o.stack),alert("Erro: "+o.message)}}),h&&h.addEventListener("submit",async r=>{r.preventDefault(),console.log("Formulário formCriarVirtual enviado");const e=document.getElementById("nomeTitular")?.value.trim();if(!e){alert("Informe o nome do titular");return}const o=I(),a=N(),i="12/29";try{console.log("Enviando para /api/cards/virtual:",{nomeTitular:e,numero:o,cvv:a,validade:i});const t=await fetch("/api/cards/virtual",{method:"POST",headers:y,body:JSON.stringify({nomeTitular:e,numero:o,cvv:a,validade:i})}),n=await t.json();if(console.log("Resposta do servidor:",n),!t.ok)throw new Error(n.error||"Erro ao criar cartão virtual");V.virtuais.push({nomeTitular:e,numero:o,cvv:a,validade:i}),S({nomeTitular:e,numero:o,cvv:a,validade:i}),h.reset(),alert("Cartão virtual criado com sucesso!")}catch(t){console.error("Erro em formCriarVirtual:",t.message,t.stack),alert("Erro: "+t.message)}}),u&&u.addEventListener("submit",async r=>{r.preventDefault(),console.log("Formulário formPedirNovo enviado");const e=document.getElementById("motivo")?.value.trim();if(!e){console.log("Motivo não fornecido"),alert("Informe o motivo");return}try{console.log("Enviando para /api/cards/novo:",{motivo:e});const o=await fetch("/api/cards/novo",{method:"POST",headers:y,body:JSON.stringify({motivo:e})}),a=await o.json();if(console.log("Resposta do servidor:",a),!o.ok)throw console.error("Erro na requisição:",a),new Error(a.error||"Erro ao pedir novo cartão");alert("Novo cartão solicitado com sucesso!"),u.reset()}catch(o){console.error("Erro em formPedirNovo:",o.message,o.stack),alert("Erro: "+o.message)}});async function F(r){try{console.log("Enviando DELETE para /api/cards/virtual/",r);const e=await fetch(`/api/cards/virtual/${r}`,{method:"DELETE",headers:{Authorization:`Bearer ${m}`}}),o=await e.json();if(console.log("Resposta do servidor:",o),!e.ok)throw console.error("Erro na requisição:",o),new Error(o.error||"Erro ao excluir cartão virtual");alert("Cartão virtual excluído com sucesso!"),await p()}catch(e){console.error("Erro em excluirCartaoVirtual:",e.message,e.stack),alert("Erro: "+e.message)}}async function p(){const r=document.getElementById("listaCartoes");if(!r){console.error("Elemento listaCartoes não encontrado");return}r.innerHTML="";try{console.log("Buscando cartões em /api/cards/meus-cartoes");const e=await fetch("/api/cards/meus-cartoes",{headers:{Authorization:`Bearer ${m}`}}),o=await e.json();if(console.log("Resposta do servidor:",o),!e.ok)throw console.error("Erro na requisição:",o),new Error(o.error||"Erro ao buscar cartões");const a=o.filter(t=>t.tipo==="fisico"),i=o.filter(t=>t.tipo==="virtual");if(a.length>0){const t=document.createElement("h3");t.textContent="Cartões Físicos",t.style.color="#ff6600",r.appendChild(t);const n=document.createElement("ul");n.style.paddingLeft="20px",a.forEach(c=>{const s=document.createElement("li");s.textContent=`Titular: ${c.nomeUsuario||"Sem nome"} — Solicitado em: ${new Date(c.criadoEm).toLocaleDateString()}`,n.appendChild(s)}),r.appendChild(n)}else{const t=document.createElement("p");t.textContent="Nenhum cartão físico cadastrado.",r.appendChild(t)}if(i.length>0){const t=document.createElement("h3");t.textContent="Cartões Virtuais",t.style.color="#ff6600",r.appendChild(t);const n=document.createElement("ul");n.style.paddingLeft="20px",i.forEach(c=>{const s=document.createElement("li");s.style.display="flex",s.style.justifyContent="space-between",s.style.alignItems="center",s.style.marginBottom="6px";const D=document.createElement("span");D.textContent=`Titular: ${c.nomeUsuario||"Sem nome"} — Criado em: ${new Date(c.criadoEm).toLocaleDateString()}`;const l=document.createElement("button");l.textContent="Excluir",l.style.backgroundColor="#ff3300",l.style.color="#fff",l.style.border="none",l.style.padding="4px 10px",l.style.borderRadius="4px",l.style.cursor="pointer",l.addEventListener("click",async()=>{confirm("Deseja realmente excluir este cartão virtual?")&&await F(c._id)}),s.appendChild(D),s.appendChild(l),n.appendChild(s)}),r.appendChild(n)}else{const t=document.createElement("p");t.textContent="Nenhum cartão virtual cadastrado.",r.appendChild(t)}}catch(e){console.error("Erro ao buscar cartões:",e.message,e.stack);const o=document.createElement("p");o.style.color="red",o.textContent="Erro ao carregar cartões. Tente novamente mais tarde.",r.appendChild(o)}}function S(r){const{numero:e,nomeTitular:o,cvv:a,validade:i}=r;if(!x){console.error("Elemento cartaoVirtualContainer não encontrado");return}x.innerHTML=`
      <div style="
        width: 350px; height: 200px; border-radius: 15px; 
        background: linear-gradient(135deg, #0c0b0cff, #1c171fff); 
        color: white; padding: 20px; position: relative; 
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
        
        <img src="img/vb_bank.png" alt="VBank" style="height: 120px; position: absolute; top: -15px; left: 20px;">
        <img src="/img/mastercard.png" alt="MasterCard" style="height: 70px; position: absolute; bottom: 15px; right: 20px;">
        
        <div style="position: absolute; bottom: 50px; left: 20px;"></div>
      </div>
      
      <form style="margin-top: 20px; max-width: 350px; border-radius:8px; font-family: Arial, sans-serif;">
        <label>Nome do Titular:</label><br>
        <input type="text" readonly value="${o}" style="width: 100%; border-radius:8px; margin-bottom: 10px; padding: 8px;"><br>
        
        <label>Número do Cartão:</label><br>
        <input type="text" readonly value="${e}" style="width: 100%; border-radius:8px; margin-bottom: 10px; padding: 8px;">
        <button type="button" id="btnCopyNumeroDetalhes" style="margin-right: 10px; border-radius:8px;">Copiar Número</button><br>
        
        <label>Validade:</label><br>
        <input type="text" readonly value="${i}" style="width: 100%; border-radius:8px; margin-bottom: 10px; padding: 8px;"><br>
        <button type="button" id="btnCopyValidadeDetalhes" style="margin-right: 10px; border-radius:8px;">Copiar Validade</button><br>
         
        <label>CVV:</label><br>
        <input type="password" readonly value="${a}" id="inputCvvDetalhes" style="width: 100%; border-radius:8px; margin-bottom: 10px; padding: 8px;">
        <button type="button" id="btnToggleCvvDetalhes" style="margin-right: 10px; border-radius:8px;">Mostrar/Ocultar CVV</button>
        <button type="button" id="btnCopyCvvDetalhes" style="margin-right: 10px; border-radius:8px;">Copiar CVV</button>
      </form>
    `,x.style.display="block",document.getElementById("btnCopyNumeroDetalhes").onclick=async()=>{await w(e)},document.getElementById("btnCopyValidadeDetalhes").onclick=async()=>{await w(i)};const t=document.getElementById("inputCvvDetalhes"),n=document.getElementById("btnToggleCvvDetalhes");n.onclick=()=>{t.type==="password"?(t.type="text",n.textContent="Ocultar CVV"):(t.type="password",n.textContent="Mostrar CVV")},document.getElementById("btnCopyCvvDetalhes").onclick=async()=>{await w(a)}}p(),d()});
